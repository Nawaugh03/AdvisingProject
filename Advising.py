from DatabaseManager import DBmanager
from queue import Queue
#A rough draft of the code below
"""
The advising manager will generate a few linked list based on the users curriculums.
Have the course linekd list point to a course in the linked list in order to (X-prerequisites could be the previous course Ex: 250 prereq=csdp 222)

for example csdp: [100]->[221]->[222]->[250]->[301]->...
                           |
                           V
                   math:[109?]-[110]
each node will be the courses informatiion, (courseID, course,name, number, title, requisites, priority, and pass-condition(either pass/withdraw/failed?))
These list will be generated by curriculum area ex: csdp 221<= program core, csdp
                                                    math 109 >= curriculum iv(Mathematics)
                                                    math 112 <= program core, math
program core must have priority over other courses
priority needs an symbolic representation with !
Prerequisites: -
Co-requisites: ~ 

"""


class Course:
    def __init__(self, dataval=[]):
        self.CourseID=dataval[0]
        self.course=dataval[1]
        self.number=dataval[2]
        self.title=dataval[3]
        self.credits=dataval[4]
        self.nextval=None
class CourseList:
    def __init__(self,Listname:str):
        self.totalscore=0
        self.Listname=Listname
        self.headval=None
    def getCourse(self,dataval:Course):
        newCourse=dataval
        if (self.headval is None):
            self.headval=newCourse
            return
        curr=self.headval
        while(curr.nextval!=None):
                curr=curr.nextval
        curr.nextval = newCourse
       
    def PrintList(self):
        curr=self.headval
        if(curr!=None):
            print(f"{self.Listname}:")
            while(curr is not None):
                print(str(curr.title)+"\n | \n V")
                curr=curr.nextval
            print("NULL")
        else:
            print("N/A")

class Student:
    def __init__(self):
        self.totalcredit
        self.Major
        self.Courses=[]
        

if __name__ in "__main__":
    A = DBmanager("localhost", "root", "1234","hawkdb")
    CourseTree=CourseList("CSDP")
    #print(A.tables[0].Content[0])
    #A = DBmanager("localhost", "root", "1234")
    #A.ExportFromCSV("curriculums")
    #A.UseDatabase("HawkDB")
    #A.ImportTablestoSQL()

    for i in range(len(A.tables[0].Content)):
        NewCourse=Course(A.tables[0].Content[i])
        if ("CSDP" in str(A.tables[0].Content[i][1])):
            CourseTree.getCourse(NewCourse)
    CourseTree.PrintList()

